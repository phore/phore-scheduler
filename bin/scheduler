#!/usr/bin/php
<?php

namespace Phore\Scheduler;

use Phore\Core\Helper\PhoreConsoleColor;
use Phore\Log\Logger\PhoreEchoLoggerDriver;
use Psr\Log\LogLevel;

if (is_dir(__DIR__ . "/../vendor")) {
    require __DIR__ . "/../vendor/autoload.php";
} else {
    require __DIR__ . "/../../../autoload.php";
}

set_exception_handler(function (\Exception $ex) {
    phore_log()->emergency("Error: " . $ex->getMessage() . " (add -v to see full exception)");

    echo $ex->getTraceAsString();

    PhoreConsoleColor::SetColor("black", "red");
    echo "\n";
    echo "\n  " . implode(" ", $GLOBALS["argv"]);
    echo "\n  Emergency: " . $ex->getMessage() . "\n";
    PhoreConsoleColor::Default();
    echo "\n";

    exit(254);
});

$opts = phore_getopt("hsd", ["autoload:"]);

if ($opts->has("h") || $opts->has("help")) {
    printHelp();
    exit;
}


if ($opts->has("s"))
    phore_log()->setLogLevel(LogLevel::ERROR);

$autoload = null;
if ($opts->has("autoload")) {
    phore_log()->notice("Loading php file: " . $opts->get("autoload"));
    require($opts->get("autoload"));
}


$sched = PhoreScheduler::GetSingleton();
$sched->setLogger(phore_log());
if ($opts->has("d")) {

   $sched->run();
} else {
    echo "running";
    $sched->runNext();
}



function printHelp(string $errorMsg=null)
{
    if ($errorMsg !== null)
        $errorMsg .= "\nSee '" . $GLOBALS["argv"][0] . " --help'\n";
    echo <<<EOT
$errorMsg

Usage: {$GLOBALS["argv"][0]} [OPTIONS]

Run the scheduler queue and process the next task

Options:
  -h, --help            Show Help and exit
      --autoload file   Autoload php file
  -d                    Daemon mode: Run forever
  -s                    Silent mode (don't output data except for errors)


EOT;
}
